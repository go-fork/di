// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockModuleLoaderContract is an autogenerated mock type for the ModuleLoaderContract type
type MockModuleLoaderContract struct {
	mock.Mock
}

type MockModuleLoaderContract_Expecter struct {
	mock *mock.Mock
}

func (_m *MockModuleLoaderContract) EXPECT() *MockModuleLoaderContract_Expecter {
	return &MockModuleLoaderContract_Expecter{mock: &_m.Mock}
}

// BootstrapApplication provides a mock function with no fields
func (_m *MockModuleLoaderContract) BootstrapApplication() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for BootstrapApplication")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockModuleLoaderContract_BootstrapApplication_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BootstrapApplication'
type MockModuleLoaderContract_BootstrapApplication_Call struct {
	*mock.Call
}

// BootstrapApplication is a helper method to define mock.On call
func (_e *MockModuleLoaderContract_Expecter) BootstrapApplication() *MockModuleLoaderContract_BootstrapApplication_Call {
	return &MockModuleLoaderContract_BootstrapApplication_Call{Call: _e.mock.On("BootstrapApplication")}
}

func (_c *MockModuleLoaderContract_BootstrapApplication_Call) Run(run func()) *MockModuleLoaderContract_BootstrapApplication_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockModuleLoaderContract_BootstrapApplication_Call) Return(_a0 error) *MockModuleLoaderContract_BootstrapApplication_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockModuleLoaderContract_BootstrapApplication_Call) RunAndReturn(run func() error) *MockModuleLoaderContract_BootstrapApplication_Call {
	_c.Call.Return(run)
	return _c
}

// LoadModule provides a mock function with given fields: module
func (_m *MockModuleLoaderContract) LoadModule(module interface{}) error {
	ret := _m.Called(module)

	if len(ret) == 0 {
		panic("no return value specified for LoadModule")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(module)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockModuleLoaderContract_LoadModule_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'LoadModule'
type MockModuleLoaderContract_LoadModule_Call struct {
	*mock.Call
}

// LoadModule is a helper method to define mock.On call
//   - module interface{}
func (_e *MockModuleLoaderContract_Expecter) LoadModule(module interface{}) *MockModuleLoaderContract_LoadModule_Call {
	return &MockModuleLoaderContract_LoadModule_Call{Call: _e.mock.On("LoadModule", module)}
}

func (_c *MockModuleLoaderContract_LoadModule_Call) Run(run func(module interface{})) *MockModuleLoaderContract_LoadModule_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(interface{}))
	})
	return _c
}

func (_c *MockModuleLoaderContract_LoadModule_Call) Return(_a0 error) *MockModuleLoaderContract_LoadModule_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockModuleLoaderContract_LoadModule_Call) RunAndReturn(run func(interface{}) error) *MockModuleLoaderContract_LoadModule_Call {
	_c.Call.Return(run)
	return _c
}

// LoadModules provides a mock function with given fields: modules
func (_m *MockModuleLoaderContract) LoadModules(modules ...interface{}) error {
	var _ca []interface{}
	_ca = append(_ca, modules...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for LoadModules")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(...interface{}) error); ok {
		r0 = rf(modules...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockModuleLoaderContract_LoadModules_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'LoadModules'
type MockModuleLoaderContract_LoadModules_Call struct {
	*mock.Call
}

// LoadModules is a helper method to define mock.On call
//   - modules ...interface{}
func (_e *MockModuleLoaderContract_Expecter) LoadModules(modules ...interface{}) *MockModuleLoaderContract_LoadModules_Call {
	return &MockModuleLoaderContract_LoadModules_Call{Call: _e.mock.On("LoadModules",
		append([]interface{}{}, modules...)...)}
}

func (_c *MockModuleLoaderContract_LoadModules_Call) Run(run func(modules ...interface{})) *MockModuleLoaderContract_LoadModules_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]interface{}, len(args)-0)
		for i, a := range args[0:] {
			if a != nil {
				variadicArgs[i] = a.(interface{})
			}
		}
		run(variadicArgs...)
	})
	return _c
}

func (_c *MockModuleLoaderContract_LoadModules_Call) Return(_a0 error) *MockModuleLoaderContract_LoadModules_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockModuleLoaderContract_LoadModules_Call) RunAndReturn(run func(...interface{}) error) *MockModuleLoaderContract_LoadModules_Call {
	_c.Call.Return(run)
	return _c
}

// RegisterCoreProviders provides a mock function with no fields
func (_m *MockModuleLoaderContract) RegisterCoreProviders() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for RegisterCoreProviders")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockModuleLoaderContract_RegisterCoreProviders_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RegisterCoreProviders'
type MockModuleLoaderContract_RegisterCoreProviders_Call struct {
	*mock.Call
}

// RegisterCoreProviders is a helper method to define mock.On call
func (_e *MockModuleLoaderContract_Expecter) RegisterCoreProviders() *MockModuleLoaderContract_RegisterCoreProviders_Call {
	return &MockModuleLoaderContract_RegisterCoreProviders_Call{Call: _e.mock.On("RegisterCoreProviders")}
}

func (_c *MockModuleLoaderContract_RegisterCoreProviders_Call) Run(run func()) *MockModuleLoaderContract_RegisterCoreProviders_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockModuleLoaderContract_RegisterCoreProviders_Call) Return(_a0 error) *MockModuleLoaderContract_RegisterCoreProviders_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockModuleLoaderContract_RegisterCoreProviders_Call) RunAndReturn(run func() error) *MockModuleLoaderContract_RegisterCoreProviders_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockModuleLoaderContract creates a new instance of MockModuleLoaderContract. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockModuleLoaderContract(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockModuleLoaderContract {
	mock := &MockModuleLoaderContract{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
